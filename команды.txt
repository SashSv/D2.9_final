
# создаем 2-х пользователей
user1 = User.objects.create_user(username='Mike')
user2 = User.objects.create_user(username='Joe')
# создаем авторов
Author.objects.create(authorUser=user2)
author = Author.objects.get(id=1)
author2 = Author.objects.get(id=2)

# создаем категории
Category.objects.create(name='IT')
Category.objects.create(name='WORD')
Category.objects.create(name='POLITICA')
Category.objects.create(name='SPORT')

# создаем статьи
Post.objects.create(author=author, categoryType='NW', title='sometitle', text='some big text')
Post.objects.create(author=author, categoryType='NW', title='some title 2', text='some big big text')
Post.objects.create(author=author, categoryType='AR', title='some title 3', text='some very big text')
Post.objects.create(author=author2, categoryType='NW', title='some title 4', text='some huge big text')

Post.objects.get(id=1).title
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))

# создаем комментарии к статьям
Comment.objects.create(commentPOst=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='any text by author')
Comment.objects.create(commentPOst=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='bla-bla-bla')

# создаем лайки и дизлайки
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).rating
Comment.objects.get(id=1).dislike()
Comment.objects.get(id=1).dislike()
Comment.objects.get(id=1).dislike()

# обновляем рейтинги авторов
a = Author.objects.get(id=1)
a.update_rating()
a.retingAuthor
Post.objects.get(id=1).like()
a.update_rating()
a = Author.objects.order_by('-retingAuthor')[:1]

# получаем рейтинги
>>> for i in a:
...     i.retingAuthor
...     i.authorUser.username
...
1
'Mike'

# выводим дату добавления
>>> Post.objects.all().order_by('-rating').values('dateCreatoin', 'author', 'rating', 'title', 'text')[:1]
<QuerySet [{'dateCreatoin': datetime.datetime(2021, 11, 21, 19, 0, 23, 544263, tzinfo=<UTC>), 'author': 1, 'rating': 4, 'title': 'some title 2', 'text': 'some big big text'}]>

# выводим комменты к лучшей статье
>>> Post.objects.all().order_by('-rating')[0].id
2

# "Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье."
# сделать не получилось ((
Comment.objects.filter(commentPOst=Post.objects.get(id=Post.objects.all().order_by('-rating')[0].id)).values('dateCreatoin', 'commentUser', 'rating', 'text')
#..вот что выводит..

Traceback (most recent call last):
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\sql\query.py", line 1932, in add_fields
    join_info = self.setup_joins(name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m)
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\sql\query.py", line 1625, in setup_joins
    path, final_field, targets, rest = self.names_to_path(
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\sql\query.py", line 1539, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'dateCreatoin' into field. Choices are: commentPOst, commentPOst_id, commentUser, commentUser_id, dateCreation, id, rating, text

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\query.py", line 840, in values
    clone = self._values(*fields, **expressions)
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\query.py", line 835, in _values
    clone.query.set_values(fields)
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\sql\query.py", line 2248, in set_values
    self.add_fields(field_names, True)
  File "C:\Users\Alexander\PycharmProjects\HW_D2.9_v1\venv\lib\site-packages\django\db\models\sql\query.py", line 1959, in add_fields
    raise FieldError("Cannot resolve keyword %r into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'dateCreatoin' into field. Choices are: commentPOst, commentPOst_id, commentUser, commentUser_id, dateCreation, id, rating, text
>>>